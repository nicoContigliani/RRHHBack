import dotenv from "dotenv";
import { Sequelize, QueryTypes } from 'sequelize';
dotenv.config();

// Configura tu instancia de Sequelize
const sequelize = new Sequelize(
  process.env.database || '', //db
  process.env.username || '', //username
  process.env.password || '', //password
  {
    host: process.env.host || '',
    dialect: 'postgres',
  }
);

// Define tu consulta SQL
const consultaSQL = 'SELECT * FROM tabla WHERE Users = :condicion';

const { BrachUser, Branch, Company, CompanyVacances, CV, CVSection, CVUser, Interview, InterviewResponsible, InterviewUser, InterviewVacance, Item, itemSection, Permission, PermissionRoll, Result, ResultTest, Role, RollUser, Section, SectionType, TestInterview, Test, TypeInterview, TypeTest, TypeVacancy, User, Vacancy, Shift } = require('../../../models');

export const getDao = async () => {
  const Alls = await User.findAll({});
  return Alls;
};

export const getDaoFilter = async (data: any) => {
  const Alls = await User.findOne({
    where: {
      [Op.or]: [
        { email: data },
        { fullname: data },
      ],
    },
    include: [
      {
        model: Role,
        as: 'Roles',
        include: [
          {
            model: Permission,
            as: 'Permissions',
          },
        ],
      },
      {
        model: Branch,
        as: 'Branches',
        include: [
          {
            model: Company,
            as: 'Company',
          },
          {
            model: Shift,
            as: 'Shifts',
          },
        ],
      },
    ],
  });

  return Alls;
};

export const postDao = async (data: any) => {
  try {
    return await User.create(data);
  } catch (error) {
    console.log("ðŸš€ ~ postDao ~ error:", error);
  }
};

export const getAllColumns = async () => {
  try {
    // Ejecuta la consulta
    const resultados = await sequelize.query(consultaSQL, {
      replacements: { condicion: 'valor' }, // Puedes pasar parÃ¡metros usando replacements
      type: QueryTypes.SELECT, // Especifica el tipo de consulta
    });

    console.log(resultados); // Maneja los resultados como desees
  } catch (error) {
    console.log("ðŸš€ ~ getAllColumns ~ error:", error);
  }
};